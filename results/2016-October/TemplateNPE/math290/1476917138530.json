{"endInit":1476917123738,"executions":[{"result":{"error":"testMath290(SimplexSolverTest): unbounded solution\nclass org.apache.commons.math.optimization.linear.UnboundedSolutionException: unbounded solution\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:53)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1(SimplexSolver.java:94)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:104)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:49)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1476917125046,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = numArtificialVariables;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numArtificialVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917125048,"metadata":{"seed":10}},{"result":{"error":"testMath290(SimplexSolverTest): unbounded solution\nclass org.apache.commons.math.optimization.linear.UnboundedSolutionException: unbounded solution\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:53)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1(SimplexSolver.java:94)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:104)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:49)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1476917126213,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = numSlackVariables;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numSlackVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917126215,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917127379,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = numDecisionVariables;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numDecisionVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917127380,"metadata":{"seed":10}},{"result":{"error":"testMath290(SimplexSolverTest): no entry at indices (-1, 0) in a 3x7 matrix\nclass org.apache.commons.math.linear.MatrixIndexException: no entry at indices (-1, 0) in a 3x7 matrix\n    at org.apache.commons.math.linear.Array2DRowRealMatrix.getEntry(Array2DRowRealMatrix.java:187)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.subtractRow(SimplexTableau.java:200)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:119)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:34)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:103)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:49)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\n\n","type":"test","success":false},"startDate":1476917129289,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = -1;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"}],"endDate":1476917129292,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917130786,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = 0;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"}],"endDate":1476917130787,"metadata":{"seed":10}},{"result":{"error":"testMath290(SimplexSolverTest): unbounded solution\nclass org.apache.commons.math.optimization.linear.UnboundedSolutionException: unbounded solution\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:53)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.solvePhase1(SimplexSolver.java:94)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:104)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:49)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1476917131882,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,8 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            int row;\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                row = 1;\n+            } else {\n+                row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            }\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"}],"endDate":1476917131883,"metadata":{"seed":10}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:113)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:34)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:103)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:49)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1476917132953,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            java.lang.Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = new Integer(-1);\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"}],"parameterTypes":["int"]},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"RANDOM"}],"endDate":1476917132954,"metadata":{"seed":10}},{"result":{"error":"testMath290(SimplexSolverTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.optimization.linear.SimplexTableau.initialize(SimplexTableau.java:113)\n    at org.apache.commons.math.optimization.linear.SimplexTableau.<init>(SimplexTableau.java:34)\n    at org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:103)\n    at org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:49)\n    at SimplexSolverTest.testMath290(SimplexSolverTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n\n\n","type":"test","success":false},"startDate":1476917134002,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,3 +248,7 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n-            int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            java.lang.Integer basicRow = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+            if (basicRow == null) {\n+                basicRow = new Integer(new String());\n+            }\n+            int row = basicRow;\n             subtractRow(0, row, 1.0);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"New","class":"java.lang.String"}],"parameterTypes":["java.lang.String"]},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"RANDOM"}],"endDate":1476917134004,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917138501,"test":{"name":"testMath290","class":"SimplexSolverTest"},"diff":"--- /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ /main/java/org/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -248,2 +248,5 @@\n         for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n+            if (getBasicRow(getArtificialVariableOffset() + artificialVar) == null) {\n+                return null;\n+            }\n             int row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n","decisions":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":"null","class":"null"},"epsilon":0,"strategy":"Strat4 NULL","used":true,"decisionType":"RANDOM"}],"endDate":1476917138502,"metadata":{"seed":10}}],"start":1476917120255,"searchSpace":[{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":"null","class":"null"},"epsilon":0,"strategy":"Strat4 NULL","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"New","class":"java.lang.String"}],"parameterTypes":["java.lang.String"]},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"New","class":"java.lang.Integer","parameters":[{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"}],"parameterTypes":["int"]},"epsilon":0,"strategy":"Strat2B","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":0,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Primitive","value":-1,"class":"class java.lang.Integer"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numDecisionVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numSlackVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":10318,"line":249,"class":"org.apache.commons.math.optimization.linear.SimplexTableau","sourceStart":10261},"value":{"instanceType":"Variable","variableName":"numArtificialVariables"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"end":1476917138518}