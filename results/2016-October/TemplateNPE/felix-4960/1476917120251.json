{"endInit":1476917077627,"executions":[{"result":{"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:314)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.executeTest(NPEFixTemplateEvaluation.java:402)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.applyAndRunPatch(NPEFixTemplateEvaluation.java:332)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.strategy1(NPEFixTemplateEvaluation.java:203)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.runProject(NPEFixTemplateEvaluation.java:118)\n    at fr.inria.spirals.npefix.resi.AbstractNPEDataset.felix4960(AbstractNPEDataset.java:324)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\n\n","type":"test","success":false},"startDate":1476917080693,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < m_contentPath.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_contentPath"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917080694,"metadata":{"seed":10}},{"result":{"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:314)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.executeTest(NPEFixTemplateEvaluation.java:402)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.applyAndRunPatch(NPEFixTemplateEvaluation.java:332)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.strategy1(NPEFixTemplateEvaluation.java:203)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.runProject(NPEFixTemplateEvaluation.java:118)\n    at fr.inria.spirals.npefix.resi.AbstractNPEDataset.felix4960(AbstractNPEDataset.java:324)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\n\n","type":"test","success":false},"startDate":1476917083476,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < m_activationExcludes.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_activationExcludes"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917083478,"metadata":{"seed":10}},{"result":{"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:314)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.executeTest(NPEFixTemplateEvaluation.java:402)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.applyAndRunPatch(NPEFixTemplateEvaluation.java:332)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.strategy1(NPEFixTemplateEvaluation.java:203)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.runProject(NPEFixTemplateEvaluation.java:118)\n    at fr.inria.spirals.npefix.resi.AbstractNPEDataset.felix4960(AbstractNPEDataset.java:324)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\n\n","type":"test","success":false},"startDate":1476917086371,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < m_declaredNativeLibs.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_declaredNativeLibs"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917086372,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917088880,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < m_declaredReqs.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_declaredReqs"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917088888,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917091427,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < m_declaredCaps.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_declaredCaps"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917091428,"metadata":{"seed":10}},{"result":{"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImpl.getResourcesLocal(BundleRevisionImpl.java:314)\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:14)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.executeTest(NPEFixTemplateEvaluation.java:402)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.applyAndRunPatch(NPEFixTemplateEvaluation.java:332)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.strategy1(NPEFixTemplateEvaluation.java:203)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.runProject(NPEFixTemplateEvaluation.java:118)\n    at fr.inria.spirals.npefix.resi.AbstractNPEDataset.felix4960(AbstractNPEDataset.java:324)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\n\n","type":"test","success":false},"startDate":1476917093906,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < m_activationIncludes.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_activationIncludes"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917093907,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917096403,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < l.size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"l"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"endDate":1476917096404,"metadata":{"seed":10}},{"result":{"type":"test","success":true},"startDate":1476917115268,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,12 +536,26 @@\n             // Check the module class path.\n-            for (int i = 0; i < contentPath.size(); i++)\n-            {\n-                if (contentPath.get(i).hasEntry(name))\n+            if (contentPath == null) {\n+                for (int i = 0; i < new ArrayList().size(); i++)\n                 {\n-                    // Use the class path index + 1 for creating the path so\n-                    // that we can differentiate between module content URLs\n-                    // (where the path will start with 0) and module class\n-                    // path URLs.\n-                    l.add(createURL(i + 1, name));\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n                 }\n+            } else {\n+                for (int i = 0; i < contentPath.size(); i++)\n+                {\n+                    if (contentPath.get(i).hasEntry(name))\n+                    {\n+                        // Use the class path index + 1 for creating the path so\n+                        // that we can differentiate between module content URLs\n+                        // (where the path will start with 0) and module class\n+                        // path URLs.\n+                        l.add(createURL(i + 1, name));\n+                    }\n+                }\n             }\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"New","class":"java.util.ArrayList"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"}],"endDate":1476917115269,"metadata":{"seed":10}},{"result":{"error":"testGetResourcesLocalNullContentPath(org.apache.felix.framework.BundleRevisionImplTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.felix.framework.BundleRevisionImplTest.testGetResourcesLocalNullContentPath(BundleRevisionImplTest.java:15)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.executeTest(NPEFixTemplateEvaluation.java:402)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.applyAndRunPatch(NPEFixTemplateEvaluation.java:332)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.strategy4(NPEFixTemplateEvaluation.java:309)\n    at fr.inria.spirals.npefix.resi.NPEFixTemplateEvaluation.runProject(NPEFixTemplateEvaluation.java:121)\n    at fr.inria.spirals.npefix.resi.AbstractNPEDataset.felix4960(AbstractNPEDataset.java:324)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\n\n","type":"test","success":false},"startDate":1476917120212,"test":{"name":"testGetResourcesLocalNullContentPath","class":"org.apache.felix.framework.BundleRevisionImplTest"},"diff":"--- main/java/org/apache/felix/framework/BundleRevisionImpl.java\n+++ main/java/org/apache/felix/framework/BundleRevisionImpl.java\n@@ -536,2 +536,5 @@\n             // Check the module class path.\n+            if (contentPath == null) {\n+                return null;\n+            }\n             for (int i = 0; i < contentPath.size(); i++)\n","decisions":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Primitive","value":"null","class":"null"},"epsilon":0,"strategy":"Strat4 NULL","used":true,"decisionType":"RANDOM"}],"endDate":1476917120213,"metadata":{"seed":10}}],"start":1476917076401,"searchSpace":[{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Primitive","value":"null","class":"null"},"epsilon":0,"strategy":"Strat4 NULL","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"New","class":"java.util.ArrayList"},"epsilon":0,"strategy":"Strat2A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"l"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_activationIncludes"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_declaredCaps"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_declaredReqs"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_declaredNativeLibs"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_activationExcludes"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"},{"nbUse":0,"location":{"sourceEnd":17266,"line":537,"class":"org.apache.felix.framework.BundleRevisionImpl","sourceStart":17256},"value":{"instanceType":"Variable","variableName":"m_contentPath"},"epsilon":0,"strategy":"Strat1A","used":true,"decisionType":"RANDOM"}],"end":1476917120222}